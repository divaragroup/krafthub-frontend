name: Deploy Frontend to Development

on:
  push:
    branches: [ deploy-dev ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Fetch environment variables from GitHub repo
        run: |
            curl -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3.raw" \
                -s "https://api.github.com/repos/divaragroup/krafthub-gitops/contents/secrets/frontend.json?ref=develop" > frontend.json
            
            jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' frontend.json > .env.deploy
            
            echo "Generated .env.deploy file:"
            cat .env.deploy
            COPY .env.deploy .env

      - name: Build, tag, and push Docker image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REPOSITORY: krathub
          GITHUB_SHA: ${{ github.sha }}
          IMAGE_TAG: frontend-dev
        run: |
          docker build -f Dockerfile -t $DOCKERHUB_USERNAME/$REPOSITORY:$GITHUB_SHA -t $DOCKERHUB_USERNAME/$REPOSITORY:$IMAGE_TAG .
          docker push $DOCKERHUB_USERNAME/$REPOSITORY:$GITHUB_SHA
          docker push $DOCKERHUB_USERNAME/$REPOSITORY:$IMAGE_TAG

      - name: Fetch docker-compose.yaml from GitHub repo
        run: |
          curl -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3.raw" \
                -s "https://api.github.com/repos/divaragroup/krafthub-gitops/contents/docker-compose.yaml?ref=develop" > docker-compose.yaml

      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.SERVER_IP }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REPOSITORY: krathub
          IMAGE_TAG: frontend-dev
          SERVICE: frontend
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts 2>/dev/null
          
          scp -o StrictHostKeyChecking=no docker-compose.yaml ubuntu@$HOST:~/docker-compose.yaml
          
          ssh -o StrictHostKeyChecking=no ubuntu@"$HOST" << EOF
            echo "${{ secrets.DOCKERHUB_PAT }}" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker pull $DOCKERHUB_USERNAME/$REPOSITORY:$IMAGE_TAG
            docker compose up -d --force-recreate $SERVICE
            docker image prune -f
          EOF